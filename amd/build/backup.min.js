define("local_solent/backup",["exports","core/ajax","core/pending","core/notification"],(function(_exports,_ajax,_pending,_notification){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Competency picker.
   *
   * To handle 'save' events use: picker.on('save')
   * This will receive a object with either a single 'competencyId', or an array in 'competencyIds'
   * depending on the value of multiSelect.
   *
   * @module     local_solent/backup
   * @copyright  2024 Solent University
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getImportRestrictions=void 0,_ajax=_interopRequireDefault(_ajax),_pending=_interopRequireDefault(_pending),_notification=_interopRequireDefault(_notification);_exports.getImportRestrictions=()=>{const request={methodname:"local_solent_get_import_restrictions",args:[]},pendingPromise=new _pending.default("local/solent:getImportRestrictions");return _ajax.default.call([request])[0].then(restrictactivitybackup).catch(_notification.default.exception),pendingPromise.resolve()};const restrictactivitybackup=data=>{const biform=document.querySelector('#page-backup-import div[role="main"] form');if(!biform.stage)return;const stage=biform.stage.value,jumpto=document.querySelector('[name="oneclickbackup"]'),legacy=document.querySelector('[name="setting_root_legacyfiles"]');if(jumpto&&(jumpto.style.display="none",jumpto.setAttribute("disabled",!0)),legacy&&(legacy.removeAttribute("checked"),legacy.setAttribute("disabled",!0),legacy.value=0),!data)return;if(2!=stage)return;biform.querySelectorAll('input[type="checkbox"]').forEach((checkbox=>{let name=checkbox.name,label=checkbox.parentNode.textContent.replaceAll("Â "," ").replaceAll("\n"," ");data.forEach((item=>{item.activity&&item.title?-1!=name.search(new RegExp("activity_"+item.activity+"[0-9a-z_]+included"))&&-1!=label.search(item.title)&&(checkbox.setAttribute("checked",!1),checkbox.setAttribute("disabled",!0)):item.activity?-1!=name.search(new RegExp("activity_"+item.activity+"[0-9a-z_]+included"))&&(checkbox.setAttribute("checked",!1),checkbox.setAttribute("disabled",!0)):item.title&&-1!=label.search(item.title)&&(checkbox.setAttribute("checked",!1),checkbox.setAttribute("disabled",!0))}))}))}}));

//# sourceMappingURL=backup.min.js.map